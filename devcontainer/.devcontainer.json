// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.2/containers/docker-existing-dockerfile
{
    "name": "joyce Dockerfile",
    "workspaceFolder": "/usr/src/app",
    // Sets the run context to one level up instead of the .devcontainer folder.
    "context": "..",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerFile": "Dockerfile",
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "python.testing.pytestArgs": [
            "-s",
            "tests",
            "-vvv",
            "--disable-warnings",
            "-x"
        ],
        "python.formatting.blackArgs": [
            "--line-length",
            "120",
            "--experimental-string-processing"
        ],
        "python.formatting.autopep8Args": [
            "--max-line-length",
            "120",
            "--ignore",
            "E402"
        ],
        "python.linting.pylintArgs": [
            "--enable=W0614",
            "--max-line-length=120"
        ],
        "python.testing.pytestEnabled": true,
        "python.testing.pytestPath": "pytest",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.autoComplete.addBrackets": false,
        "editor.tabCompletion": "on",
        "python.formatting.provider": "black",
        "editor.codeLens": true,
        "python.testing.unittestEnabled": false,
        "editor.formatOnSave": false,
        "[python]": {
            "editor.codeActionsOnSave": {
                "source.organizeImports": false
            }
        },
        "openInGitHub.defaultPullRequestBranch": "develop",
        "openInGitHub.providerType": "github",
        "restructuredtext.confPath": "",
        "[markdown]": {
            "editor.wordWrap": "wordWrapColumn",
            "editor.quickSuggestions": true,
            "editor.wordWrapColumn": 80,
        },
        "python.languageServer": "Pylance",
        "yaml.customTags": [
            "!And",
            "!And sequence",
            "!If",
            "!If sequence",
            "!Not",
            "!Not sequence",
            "!Equals",
            "!Equals sequence",
            "!Or",
            "!Or sequence",
            "!FindInMap",
            "!FindInMap sequence",
            "!Base64",
            "!Join",
            "!Join sequence",
            "!Cidr",
            "!Ref",
            "!Sub",
            "!Sub sequence",
            "!GetAtt",
            "!GetAZs",
            "!ImportValue",
            "!ImportValue sequence",
            "!Select",
            "!Select sequence",
            "!Split",
            "!Split sequence"
        ]
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "amazonwebservices.aws-toolkit-vscode",
        "trungngo.autoflake",
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Uncomment the next line to run commands after the container is created - for example installing curl.
    "postCreateCommand": "apt-get update && apt-get install -y git && pip install black autoflake pytest ipython",
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}